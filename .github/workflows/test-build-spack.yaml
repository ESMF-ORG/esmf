name: Build ESMF Using Spack

on:
  workflow_dispatch:
  push:

jobs:
  latest-stable:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        compiler: [gcc@11.3.0, oneapi@2023.0.0]
        esmf: [esmf@8.4.1~pnetcdf, esmf@8.4.1~external-parallelio]

    steps:
    # check out base repo
    - name: Checkout Base Repository
      uses: actions/checkout@v3

    # prepare core environment
    - name: Install Core Development Tools
      run: |
        sudo apt-get -qq update
        sudo apt-get -qq install tar unzip file gringo
        sudo apt-get -qq install build-essential binutils-dev gfortran
        sudo apt-get -qq install python3-dev

    # restore dependencies from cache
    - name: Restore Dependencies
      uses: actions/cache@v3
      if: contains(${{ matrix.compiler }}, 'intel') || contains(${{ matrix.compiler }}, 'oneapi')
      with:
        path: /opt/intel/oneapi
        key: intel- 
        restore-keys: |
          intel-${{ runner.os }}-${{ matrix.compiler }}

    # install compiler
    - name: Install Intel Compiler
      if: contains(${{ matrix.compiler }}, 'intel') || contains(${{ matrix.compiler }}, 'oneapi')
      run: |
        cd ${{ github.workspace }}/.github/workflows
        scripts/install_oneapi.sh

    # concretize test environment 
    - name: Concretize Spack Environment Using YAML Specification
      run: |
        ${{ github.workspace }}/.github/workflows/scripts/spack_concretize.sh \
          -a x86_64 \
          -c ${{ matrix.compiler }} \
          -d ${{ matrix.esmf }} \
          -i ~/.spack-ci \
          -r ${{ github.workspace }} 

    # install test environment
    - name: Install Dependencies with Spack 
      run: |
        ${{ github.workspace }}/.github/workflows/scripts/spack_install.sh \
          -r ${{ github.workspace }}
